# nonintersecting:
intersecting(K) :- move(K,X,Y), move(K+1,X,Y). 
upperLeft(K,X,Y) :- move(K,X,Y,_,_). 
:- not intersecting(K), upperLeft(K,X,Y), upperLeft(K+1,XX,YY), (n*(Y-1)+X) < (n*(YY-1)+XX).  

# single ones in the end
isSingle(K) :- move(K,X,Y,0,0). 
:- k(K;K+1), isSingle(K), not isSingle(K+1). 

# big one in the end
:- k(K), not final(K), move(K,0,0,n-1,n-1). 

#containment
not_containing(K) :- move(K+1,X,Y), not move(K,X,Y). 

:- not not_containing(K), move(K,

